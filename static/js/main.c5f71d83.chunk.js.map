{"version":3,"sources":["config/socket.js","constants.js","Lobby.js","WorkExample.js","config/peer.js","reportWebVitals.js","index.js"],"names":["socket","WebSocket","process","MESSAGE","JOIN_LOBBY","JOIN_LOBBY_ACK","GET_PEER_LIST","GET_PEER_LIST_ACK","PEER_LIST_CHANGED","GET_STUN_TURN_INFO","GET_STUN_TURN_INFO_ACK","WEBRTC_OFFER","WEBRTC_ANSWER","ICE_CANDIDATE","CALL_STARTED","HANG_UP","Lobby","users","myName","onSelectRecipient","Grid","container","spacing","map","name","status","item","xs","Badge","badgeContent","color","IconButton","style","borderRadius","onClick","Paper","component","Box","p","Typography","buttonProps","variant","peer","RTCPeerConnection","iceServers","urls","usePeer","localVideoRef","React","useRef","remoteVideoRef","recipientRef","useState","uuid","slice","senderName","setSenderName","recipientName","setRecipientName","localeStream","setLocaleStream","joinedUsers","setJoinedUsers","video","audio","devicesMuteStatuses","setDeviceMuteStatus","handleConnectToMediaStream","a","navigator","mediaDevices","getUserMedia","stream","current","getTracks","forEach","track","addTrack","srcObject","handleCall","createOffer","offerToReceiveVideo","offerToReceiveAudio","sdpOffer","setLocalDescription","message","type","data","sender","recipient","send","JSON","stringify","handleHungUp","stop","close","handleInitListenersForPeer","addEventListener","candidate","event","streams","iceConnectionState","ontrack","onicecandidate","useEffect","then","parse","setRemoteDescription","createAnswer","sdpAnswer","addIceCandidate","handleChangeSenderName","target","value","handleSelectRecipient","newRecipientName","isVideoOn","isAudioOn","handleToggleDevicesMuteStatus","deviceType","currentDevicesMuteStatuses","newDevicesMuteStatuses","kind","enabled","handleJoinLobby","App","justify","autoPlay","ref","width","height","Videocam","VideocamOff","Mic","MicOff","TextField","onChange","fullWidth","autoFocus","disabled","Boolean","find","Button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.c5f71d83.chunk.js","sourcesContent":["export const socket = new WebSocket(process.env.REACT_APP_SOCKET);\n","export const MESSAGE = {\n  TYPE: {\n    JOIN_LOBBY: \"JOIN_LOBBY\",\n    JOIN_LOBBY_ACK: \"JOIN_LOBBY_ACK\",\n\n    GET_PEER_LIST: \"GET_PEER_LIST\",\n    GET_PEER_LIST_ACK: \"GET_PEER_LIST_ACK\",\n    PEER_LIST_CHANGED: \"PEER_LIST_CHANGED\",\n\n    GET_STUN_TURN_INFO: \"GET_STUN_TURN_INFO\",\n    GET_STUN_TURN_INFO_ACK: \"GET_STUN_TURN_INFO_ACK\",\n\n    WEBRTC_OFFER: \"WEBRTC_OFFER\",\n    WEBRTC_ANSWER: \"WEBRTC_ANSWER\",\n    ICE_CANDIDATE: \"ICE_CANDIDATE\",\n\n    CALL_STARTED: \"CALL_STARTED\",\n\n    HANG_UP: \"HANG_UP\",\n  },\n};\n","import {\n  Grid,\n  Box,\n  Paper,\n  Typography,\n  Badge,\n  IconButton,\n} from \"@material-ui/core\";\n\nexport const Lobby = ({ users, myName, onSelectRecipient }) => (\n  <Grid container spacing={2}>\n    {users.map(({ name, status }) => {\n      if (myName === name) return null;\n\n      return (\n        <Grid item xs=\"auto\" key={name}>\n          <Badge\n            badgeContent={status === \"ONLINE\" ? \"online\" : \"offline\"}\n            color={status === \"ONLINE\" ? \"primary\" : \"secondary\"}\n          >\n            <IconButton\n              style={{ borderRadius: 8 }}\n              onClick={() => onSelectRecipient(name)}\n            >\n              <Paper component={Box} p={2}>\n                <Typography>{name}</Typography>\n              </Paper>\n            </IconButton>\n          </Badge>\n        </Grid>\n      );\n    })}\n  </Grid>\n);\n","import React from \"react\";\n\nimport { v4 as uuid } from \"uuid\";\n\nimport {\n  Select,\n  MenuItem,\n  Grid,\n  Box,\n  Button,\n  TextField,\n  IconButton,\n} from \"@material-ui/core\";\nimport { Videocam, VideocamOff, Mic, MicOff } from \"@material-ui/icons\";\n\nimport \"webrtc-adapter\";\n\nimport { PEER } from \"./config/peer\";\nimport { socket } from \"./config/socket\";\nimport { MESSAGE } from \"./constants\";\n\nimport { Lobby } from \"./Lobby\";\n\nconst buttonProps = {\n  variant: \"contained\",\n  color: \"primary\",\n};\n\nconst generateSenderName = () => `${uuid().slice(0, 4)}@${uuid().slice(0, 4)}`;\n\nconst peer = new RTCPeerConnection(PEER.CONFIG);\n\nconst usePeer = () => {\n  const localVideoRef = React.useRef(null);\n  const remoteVideoRef = React.useRef(null);\n\n  const recipientRef = React.useRef(null);\n\n  const [senderName, setSenderName] = React.useState(generateSenderName());\n  const [recipientName, setRecipientName] = React.useState(\"\");\n  const [localeStream, setLocaleStream] = React.useState(null);\n\n  const [joinedUsers, setJoinedUsers] = React.useState([]);\n\n  const [devicesMuteStatuses, setDeviceMuteStatus] = React.useState({\n    video: true,\n    audio: true,\n  });\n\n  const handleConnectToMediaStream = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: !true,\n    });\n\n    setLocaleStream(stream);\n\n    if (!localVideoRef.current) return;\n\n    stream.getTracks().forEach((track) => peer.addTrack(track, stream));\n\n    localVideoRef.current.srcObject = stream;\n  };\n\n  const handleCall = async () => {\n    const sdpOffer = await peer.createOffer({\n      offerToReceiveVideo: true,\n      offerToReceiveAudio: true,\n    });\n\n    await peer.setLocalDescription(sdpOffer);\n\n    const message = {\n      type: MESSAGE.TYPE.WEBRTC_OFFER,\n      data: sdpOffer,\n      sender: senderName,\n      recipient: recipientName,\n    };\n\n    // NOTE: fix me\n    recipientRef.current = recipientName;\n\n    socket.send(JSON.stringify(message));\n  };\n\n  const handleHungUp = () => {\n    remoteVideoRef.current.srcObject\n      .getTracks()\n      .forEach((track) => track.stop());\n\n    localVideoRef.current.srcObject\n      .getTracks()\n      .forEach((track) => track.stop());\n\n    peer.close();\n  };\n\n  const handleJoinLobby = () => {\n    const message = {\n      type: MESSAGE.TYPE.JOIN_LOBBY,\n      data: \"\",\n      sender: senderName,\n      recipient: \"\",\n    };\n\n    socket.send(JSON.stringify(message));\n  };\n\n  const handleSelectRecipient = (newRecipientName) =>\n    setRecipientName(newRecipientName);\n\n  const handleToggleDevicesMuteStatus = (deviceType) => () =>\n    setDeviceMuteStatus((currentDevicesMuteStatuses) => {\n      const newDevicesMuteStatuses = {\n        ...currentDevicesMuteStatuses,\n        [deviceType]: !currentDevicesMuteStatuses[deviceType],\n      };\n\n      localeStream.getTracks().forEach((track) => {\n        if (track.kind === deviceType) {\n          track.enabled = !track.enabled;\n        }\n      });\n\n      return newDevicesMuteStatuses;\n    });\n\n  const handleInitListenersForPeer = () => {\n    peer.addEventListener(\"icecandidate\", ({ candidate }) => {\n      if (candidate) {\n        const message = {\n          type: MESSAGE.TYPE.ICE_CANDIDATE,\n          data: candidate,\n          sender: senderName,\n          recipient: recipientRef.current,\n        };\n\n        socket.send(JSON.stringify(message));\n      }\n    });\n\n    peer.addEventListener(\"track\", (event) => {\n      if (!remoteVideoRef.current) return;\n\n      const [stream] = event.streams;\n\n      if (remoteVideoRef.current.srcObject === stream) return;\n\n      remoteVideoRef.current.srcObject = stream;\n    });\n\n    peer.addEventListener(\"iceconnectionstatechange\", () => {\n      // disconnected, connected, checking\n      if (peer.iceConnectionState === \"disconnected\") {\n        handleHungUp();\n        peer.ontrack = null;\n        peer.onicecandidate = null;\n      }\n    });\n  };\n\n  const handleChangeSenderName = (event) => setSenderName(event.target.value);\n\n  React.useEffect(() => {\n    handleConnectToMediaStream().then(handleInitListenersForPeer);\n\n    socket.addEventListener(\"message\", async (message) => {\n      const { type, data, sender, recipient } = JSON.parse(message.data);\n\n      if (type === MESSAGE.TYPE.PEER_LIST_CHANGED) {\n        setJoinedUsers(data.users);\n      }\n\n      if (type === MESSAGE.TYPE.WEBRTC_OFFER && sender !== senderName) {\n        // NOTE: fix me\n        recipientRef.current = sender;\n\n        await peer.setRemoteDescription(data);\n\n        const sdpAnswer = await peer.createAnswer();\n\n        await peer.setLocalDescription(sdpAnswer);\n\n        const message = {\n          type: MESSAGE.TYPE.WEBRTC_ANSWER,\n          data: sdpAnswer,\n          sender: recipient,\n          recipient: sender,\n        };\n        socket.send(JSON.stringify(message));\n      }\n\n      if (type === MESSAGE.TYPE.WEBRTC_ANSWER && sender !== senderName) {\n        await peer.setRemoteDescription(data);\n      }\n\n      if (type === MESSAGE.TYPE.ICE_CANDIDATE && sender !== senderName) {\n        peer.addIceCandidate(data);\n      }\n    });\n  }, []);\n\n  return {\n    peer,\n\n    senderName,\n    handleChangeSenderName,\n\n    recipientName,\n    handleSelectRecipient,\n\n    localVideoRef,\n    remoteVideoRef,\n\n    isVideoOn: devicesMuteStatuses.video,\n    isAudioOn: devicesMuteStatuses.audio,\n    handleToggleDevicesMuteStatus,\n\n    localeStream,\n    joinedUsers,\n    handleCall,\n    handleHungUp,\n    handleJoinLobby,\n  };\n};\n\nexport const App = () => {\n  const peer = usePeer();\n\n  return (\n    <Box p={2}>\n      <Grid container spacing={2} justify=\"center\">\n        <Grid item xs={6}>\n          <video\n            autoPlay\n            ref={peer.localVideoRef}\n            style={{ width: \"100%\", height: \"100%\" }}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <video\n            autoPlay\n            ref={peer.remoteVideoRef}\n            style={{ width: \"100%\", height: \"100%\" }}\n          />\n        </Grid>\n        <Grid item xs={12} container spacing={2} justify=\"center\">\n          <Grid item xs=\"auto\">\n            <IconButton onClick={peer.handleToggleDevicesMuteStatus(\"video\")}>\n              {peer.isVideoOn ? (\n                <Videocam color=\"primary\" />\n              ) : (\n                <VideocamOff color=\"error\" />\n              )}\n            </IconButton>\n          </Grid>\n          <Grid item xs=\"auto\">\n            <IconButton onClick={peer.handleToggleDevicesMuteStatus(\"audio\")}>\n              {peer.isAudioOn ? (\n                <Mic color=\"primary\" />\n              ) : (\n                <MicOff color=\"error\" />\n              )}\n            </IconButton>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            value={peer.senderName}\n            onChange={peer.handleChangeSenderName}\n            variant=\"outlined\"\n            fullWidth\n            autoFocus\n            disabled={Boolean(\n              peer.joinedUsers.find(({ name }) => name === peer.senderName)\n            )}\n          />\n        </Grid>\n        <Grid item xs=\"auto\">\n          <Button\n            {...buttonProps}\n            onClick={peer.handleCall}\n            disabled={!peer.recipientName}\n          >\n            Call {peer.recipientName && `to ${peer.recipientName}`}\n          </Button>\n        </Grid>\n        <Grid item xs=\"auto\">\n          <Button\n            {...buttonProps}\n            onClick={peer.handleJoinLobby}\n            disabled={\n              !peer.senderName ||\n              Boolean(\n                peer.joinedUsers.find(({ name }) => name === peer.senderName)\n              )\n            }\n          >\n            {Boolean(\n              peer.joinedUsers.find(({ name }) => name === peer.senderName)\n            )\n              ? \"Joined\"\n              : \"Join\"}\n          </Button>\n        </Grid>\n        <Grid item xs=\"auto\">\n          <Button {...buttonProps} onClick={peer.handleHungUp}>\n            Hung up\n          </Button>\n        </Grid>\n      </Grid>\n      <Lobby\n        users={peer.joinedUsers}\n        myName={peer.senderName}\n        onSelectRecipient={peer.handleSelectRecipient}\n      />\n    </Box>\n  );\n};\n","export const PEER = {\n  CONFIG: {\n    iceServers: [{ urls: [\"stun:stun.l.google.com:19302\"] }],\n  },\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./WorkExample\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"webrtc-adapter\";\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
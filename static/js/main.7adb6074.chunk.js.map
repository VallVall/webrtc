{"version":3,"sources":["config/peer.js","config/socket.js","constants.js","Lobby.js","App.js","reportWebVitals.js","index.js"],"names":["PEER","iceServers","urls","socket","WebSocket","process","MESSAGE","JOIN_LOBBY","JOIN_LOBBY_ACK","GET_PEER_LIST","GET_PEER_LIST_ACK","PEER_LIST_CHANGED","GET_STUN_TURN_INFO","GET_STUN_TURN_INFO_ACK","WEBRTC_OFFER","WEBRTC_ANSWER","ICE_CANDIDATE","CALL_STARTED","HANG_UP","Lobby","users","myName","onSelectRecipient","Grid","container","spacing","map","name","status","item","xs","Badge","badgeContent","color","IconButton","style","borderRadius","onClick","Paper","component","Box","p","Typography","buttonProps","variant","PREFIX","usePeer","peerRef","React","useRef","localStreamRef","localVideoRef","remoteVideoRef","anotherVideoRef","videosRefs","recipientNameRef","useState","uuid","slice","senderName","setSenderName","joinedUsers","setJoinedUsers","video","audio","devicesMuteStatuses","setDeviceMuteStatus","join","call","hungUp","disableButtons","setDisableButtonss","handleConnectToMediaStream","a","navigator","mediaDevices","getUserMedia","stream","current","length","find","videoRef","Boolean","srcObject","handleHungUp","ontrack","onicecandidate","close","message","type","data","sender","recipient","send","JSON","stringify","state","handleCreatePeerConnection","RTCPeerConnection","getTracks","forEach","track","addTrack","addEventListener","candidate","event","videoWithoutStream","streams","handleCall","recipientName","createOffer","offerToReceiveVideo","offerToReceiveAudio","sdpOffer","setLocalDescription","useEffect","parse","filteredUsers","filter","user","includes","isCurrentUserExist","isNewUserExist","setTimeout","then","setRemoteDescription","createAnswer","sdpAnswer","addIceCandidate","handleChangeSenderName","target","value","handleSelectRecipient","newRecipientName","handleAddVideoRef","push","isVideoOn","isAudioOn","handleToggleDevicesMuteStatus","deviceType","currentDevicesMuteStatuses","newDevicesMuteStatuses","kind","enabled","handleJoinLobby","App","peer","columnSize","justify","autoPlay","ref","width","height","Videocam","VideocamOff","Mic","MicOff","TextField","onChange","fullWidth","autoFocus","disabled","Button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.7adb6074.chunk.js","sourcesContent":["export const PEER = {\n  CONFIG: {\n    iceServers: [{ urls: [\"stun:stun.l.google.com:19302\"] }],\n  },\n};\n","export const socket = new WebSocket(process.env.REACT_APP_SOCKET);\n","export const MESSAGE = {\n  TYPE: {\n    JOIN_LOBBY: \"JOIN_LOBBY\",\n    JOIN_LOBBY_ACK: \"JOIN_LOBBY_ACK\",\n\n    GET_PEER_LIST: \"GET_PEER_LIST\",\n    GET_PEER_LIST_ACK: \"GET_PEER_LIST_ACK\",\n    PEER_LIST_CHANGED: \"PEER_LIST_CHANGED\",\n\n    GET_STUN_TURN_INFO: \"GET_STUN_TURN_INFO\",\n    GET_STUN_TURN_INFO_ACK: \"GET_STUN_TURN_INFO_ACK\",\n\n    WEBRTC_OFFER: \"WEBRTC_OFFER\",\n    WEBRTC_ANSWER: \"WEBRTC_ANSWER\",\n    ICE_CANDIDATE: \"ICE_CANDIDATE\",\n\n    CALL_STARTED: \"CALL_STARTED\",\n\n    HANG_UP: \"HANG_UP\",\n  },\n};\n","import {\n  Grid,\n  Box,\n  Paper,\n  Typography,\n  Badge,\n  IconButton,\n} from \"@material-ui/core\";\n\nexport const Lobby = ({ users, myName, onSelectRecipient }) => (\n  <Grid container spacing={2}>\n    {users.map(({ name, status }) => {\n      if (myName === name) return null;\n\n      return (\n        <Grid item xs=\"auto\" key={name}>\n          <Badge\n            badgeContent={status === \"ONLINE\" ? \"online\" : \"offline\"}\n            color={status === \"ONLINE\" ? \"primary\" : \"secondary\"}\n          >\n            <IconButton\n              style={{ borderRadius: 8 }}\n              onClick={() => onSelectRecipient(name)}\n            >\n              <Paper component={Box} p={2}>\n                <Typography>{name}</Typography>\n              </Paper>\n            </IconButton>\n          </Badge>\n        </Grid>\n      );\n    })}\n  </Grid>\n);\n","import React from \"react\";\n\nimport { v4 as uuid } from \"uuid\";\n\nimport { Grid, Box, Button, TextField, IconButton } from \"@material-ui/core\";\nimport { Videocam, VideocamOff, Mic, MicOff } from \"@material-ui/icons\";\n\nimport { PEER } from \"./config/peer\";\nimport { socket } from \"./config/socket\";\nimport { MESSAGE } from \"./constants\";\n\nimport { Lobby } from \"./Lobby\";\n\nconst buttonProps = {\n  variant: \"contained\",\n  color: \"primary\",\n};\n\nconst PREFIX = \"test\";\n\nconst generateSenderName = () => `${PREFIX}@${uuid().slice(0, 4)}`;\n\nconst usePeer = () => {\n  const peerRef = React.useRef(null);\n  const localStreamRef = React.useRef(null);\n\n  const localVideoRef = React.useRef(null);\n  const remoteVideoRef = React.useRef(null);\n  const anotherVideoRef = React.useRef(null);\n  const videosRefs = React.useRef([]);\n\n  const recipientNameRef = React.useRef(null);\n\n  const [senderName, setSenderName] = React.useState(generateSenderName());\n\n  const [joinedUsers, setJoinedUsers] = React.useState([]);\n\n  const [devicesMuteStatuses, setDeviceMuteStatus] = React.useState({\n    video: true,\n    audio: true,\n  });\n\n  const [disableButtons, setDisableButtonss] = React.useState({\n    join: false,\n    call: true,\n    hungUp: true,\n  });\n\n  const handleConnectToMediaStream = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: false,\n    });\n\n    if (!videosRefs.current.length) return;\n\n    const videoWithoutStream = videosRefs.current.find(\n      (videoRef) => !Boolean(videoRef.srcObject)\n    );\n\n    videoWithoutStream.srcObject = stream;\n    localStreamRef.current = stream;\n  };\n\n  const handleHungUp = () => {\n    peerRef.current.ontrack = null;\n    peerRef.current.onicecandidate = null;\n    peerRef.current.close();\n\n    const message = {\n      type: MESSAGE.TYPE.HANG_UP,\n      data: \"\",\n      sender: senderName,\n      recipient: recipientNameRef.current,\n    };\n\n    socket.send(JSON.stringify(message));\n    setDisableButtonss((state) => ({\n      ...state,\n      call: false,\n      hungUp: true,\n    }));\n  };\n\n  const handleCreatePeerConnection = async () => {\n    peerRef.current = new RTCPeerConnection(PEER.CONFIG);\n\n    setDisableButtonss((state) => ({\n      ...state,\n      call: true,\n      hungUp: false,\n    }));\n\n    localStreamRef.current\n      .getTracks()\n      .forEach((track) =>\n        peerRef.current.addTrack(track, localStreamRef.current)\n      );\n\n    peerRef.current.addEventListener(\"icecandidate\", ({ candidate }) => {\n      if (candidate) {\n        const message = {\n          type: MESSAGE.TYPE.ICE_CANDIDATE,\n          data: candidate,\n          sender: senderName,\n          recipient: recipientNameRef.current,\n        };\n\n        socket.send(JSON.stringify(message));\n      }\n    });\n\n    peerRef.current.addEventListener(\"track\", (event) => {\n      if (!videosRefs.current.length) return;\n\n      const videoWithoutStream = videosRefs.current.find(\n        (videoRef) => !Boolean(videoRef.srcObject)\n      );\n\n      const [stream] = event.streams;\n\n      videoWithoutStream.srcObject = stream;\n    });\n  };\n\n  const handleCall = async (recipientName) => {\n    handleCreatePeerConnection();\n\n    const sdpOffer = await peerRef.current.createOffer({\n      offerToReceiveVideo: true,\n      offerToReceiveAudio: true,\n    });\n\n    await peerRef.current.setLocalDescription(sdpOffer);\n\n    const message = {\n      type: MESSAGE.TYPE.WEBRTC_OFFER,\n      data: sdpOffer,\n      sender: senderName,\n      recipient: recipientName,\n    };\n\n    socket.send(JSON.stringify(message));\n    setDisableButtonss((state) => ({\n      ...state,\n      call: true,\n    }));\n  };\n\n  const handleJoinLobby = () => {\n    const message = {\n      type: MESSAGE.TYPE.JOIN_LOBBY,\n      data: \"\",\n      sender: senderName,\n      recipient: \"\",\n    };\n\n    socket.send(JSON.stringify(message));\n    setDisableButtonss((state) => ({\n      ...state,\n      join: true,\n      hungUp: true,\n    }));\n  };\n\n  const handleSelectRecipient = (newRecipientName) => {\n    recipientNameRef.current = newRecipientName;\n    setDisableButtonss((state) => ({\n      ...state,\n      call: false,\n    }));\n  };\n\n  const handleToggleDevicesMuteStatus = (deviceType) => () =>\n    setDeviceMuteStatus((currentDevicesMuteStatuses) => {\n      const newDevicesMuteStatuses = {\n        ...currentDevicesMuteStatuses,\n        [deviceType]: !currentDevicesMuteStatuses[deviceType],\n      };\n\n      localStreamRef.current.getTracks().forEach((track) => {\n        if (track.kind === deviceType) {\n          track.enabled = !track.enabled;\n        }\n      });\n\n      return newDevicesMuteStatuses;\n    });\n\n  const handleChangeSenderName = (event) => setSenderName(event.target.value);\n\n  const handleConnectSocket = () => {\n    socket.addEventListener(\"message\", async (message) => {\n      const { type, data, sender, recipient } = JSON.parse(message.data);\n\n      if (type === MESSAGE.TYPE.PEER_LIST_CHANGED) {\n        const filteredUsers = data.users.filter((user) =>\n          user.name.includes(PREFIX)\n        );\n\n        setJoinedUsers((state) => {\n          const isCurrentUserExist = state.find(\n            (user) => user.name === senderName\n          );\n          const isNewUserExist = filteredUsers.find(\n            (user) => user.name === senderName\n          );\n\n          if (!isCurrentUserExist && isNewUserExist) {\n            setTimeout(() => {\n              handleConnectToMediaStream().then(() => {\n                state.forEach(({ name }) => handleCall(name));\n              });\n            }, 1000);\n          }\n\n          return filteredUsers;\n        });\n      }\n\n      if (type === MESSAGE.TYPE.WEBRTC_OFFER && sender !== senderName) {\n        recipientNameRef.current = sender;\n\n        // handleCreatePeerConnection();\n\n        await peerRef.current.setRemoteDescription(data);\n\n        const sdpAnswer = await peerRef.current.createAnswer();\n\n        await peerRef.current.setLocalDescription(sdpAnswer);\n\n        const message = {\n          type: MESSAGE.TYPE.WEBRTC_ANSWER,\n          data: sdpAnswer,\n          sender: recipient,\n          recipient: sender,\n        };\n        socket.send(JSON.stringify(message));\n      }\n\n      if (type === MESSAGE.TYPE.WEBRTC_ANSWER && sender !== senderName) {\n        await peerRef.current.setRemoteDescription(data);\n      }\n\n      if (type === MESSAGE.TYPE.ICE_CANDIDATE && sender !== senderName) {\n        peerRef.current.addIceCandidate(data);\n      }\n\n      if (type === MESSAGE.TYPE.HANG_UP && sender !== senderName) {\n        handleHungUp();\n      }\n    });\n  };\n\n  const handleAddVideoRef = (videoRef) => {\n    if (videoRef && !videosRefs.current.includes(videoRef)) {\n      videosRefs.current.push(videoRef);\n    }\n  };\n\n  React.useEffect(() => {\n    // handleConnectToMediaStream();\n    handleConnectSocket();\n  }, []);\n\n  return {\n    senderName,\n    handleChangeSenderName,\n\n    handleSelectRecipient,\n\n    localVideoRef,\n    remoteVideoRef,\n    anotherVideoRef,\n    handleAddVideoRef,\n\n    disableButtons,\n\n    isVideoOn: devicesMuteStatuses.video,\n    isAudioOn: devicesMuteStatuses.audio,\n    handleToggleDevicesMuteStatus,\n\n    joinedUsers,\n    handleCall,\n    handleHungUp,\n    handleJoinLobby,\n  };\n};\n\nexport const App = () => {\n  const peer = usePeer();\n\n  const columnSize = 12 / (peer.joinedUsers.length || 1);\n\n  return (\n    <Box p={2}>\n      1\n      <Grid container spacing={2} justify=\"center\">\n        {peer.joinedUsers.map((user) => (\n          <Grid key={user.name} item xs={columnSize}>\n            <video\n              autoPlay\n              ref={peer.handleAddVideoRef}\n              style={{ width: \"100%\", height: \"100%\" }}\n            />\n          </Grid>\n        ))}\n        <Grid item xs={12} container spacing={2} justify=\"center\">\n          <Grid item xs=\"auto\">\n            <IconButton onClick={peer.handleToggleDevicesMuteStatus(\"video\")}>\n              {peer.isVideoOn ? (\n                <Videocam color=\"primary\" />\n              ) : (\n                <VideocamOff color=\"error\" />\n              )}\n            </IconButton>\n          </Grid>\n          <Grid item xs=\"auto\">\n            <IconButton onClick={peer.handleToggleDevicesMuteStatus(\"audio\")}>\n              {peer.isAudioOn ? (\n                <Mic color=\"primary\" />\n              ) : (\n                <MicOff color=\"error\" />\n              )}\n            </IconButton>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            value={peer.senderName}\n            onChange={peer.handleChangeSenderName}\n            variant=\"outlined\"\n            fullWidth\n            autoFocus\n            disabled={peer.disableButtons.join}\n          />\n        </Grid>\n        <Grid item xs=\"auto\">\n          <Button\n            {...buttonProps}\n            onClick={peer.handleCall}\n            disabled={peer.disableButtons.call}\n          >\n            Call\n          </Button>\n        </Grid>\n        <Grid item xs=\"auto\">\n          <Button\n            {...buttonProps}\n            onClick={peer.handleJoinLobby}\n            disabled={peer.disableButtons.join}\n          >\n            {peer.disableButtons.join ? \"Joined\" : \"Join\"}\n          </Button>\n        </Grid>\n        <Grid item xs=\"auto\">\n          <Button\n            {...buttonProps}\n            onClick={peer.handleHungUp}\n            disabled={peer.disableButtons.hungUp}\n          >\n            Hung up\n          </Button>\n        </Grid>\n      </Grid>\n      <Lobby\n        users={peer.joinedUsers}\n        myName={peer.senderName}\n        onSelectRecipient={peer.handleSelectRecipient}\n      />\n    </Box>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"webrtc-adapter\";\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["config/peer.js","config/socket.js","constants.js","Lobby.js","App.js","reportWebVitals.js","index.js"],"names":["PEER","iceServers","urls","socket","WebSocket","process","MESSAGE","JOIN_LOBBY","JOIN_LOBBY_ACK","GET_PEER_LIST","GET_PEER_LIST_ACK","PEER_LIST_CHANGED","GET_STUN_TURN_INFO","GET_STUN_TURN_INFO_ACK","WEBRTC_OFFER","WEBRTC_ANSWER","ICE_CANDIDATE","CALL_STARTED","HANG_UP","Lobby","users","myName","onSelectRecipient","Grid","container","spacing","map","name","status","item","xs","Badge","badgeContent","color","IconButton","style","borderRadius","onClick","Paper","component","Box","p","Typography","buttonProps","variant","PREFIX","usePeer","peerRef","React","useRef","localStreamRef","localVideoRef","remoteVideoRef","useState","isRemoteVideoVisible","setRemoteVideoVisable","uuid","slice","senderName","setSenderName","recipientName","setRecipientName","joinedUsers","setJoinedUsers","video","audio","devicesMuteStatuses","setDeviceMuteStatus","join","call","hungUp","disableButtons","setDisableButtonss","handleConnectToMediaStream","a","navigator","mediaDevices","getUserMedia","stream","current","srcObject","handleHungUp","ontrack","onicecandidate","close","message","type","data","sender","recipient","send","JSON","stringify","state","handleCreatePeerConnection","RTCPeerConnection","getTracks","forEach","track","addTrack","candidate","event","streams","handleCall","createOffer","offerToReceiveVideo","offerToReceiveAudio","sdpOffer","setLocalDescription","useEffect","addEventListener","parse","filteredUsers","filter","user","includes","setRemoteDescription","createAnswer","sdpAnswer","addIceCandidate","handleChangeSenderName","target","value","handleSelectRecipient","newRecipientName","isVideoOn","isAudioOn","handleToggleDevicesMuteStatus","deviceType","currentDevicesMuteStatuses","newDevicesMuteStatuses","kind","enabled","handleJoinLobby","App","peer","justify","autoPlay","ref","width","height","Videocam","VideocamOff","Mic","MicOff","TextField","onChange","fullWidth","autoFocus","disabled","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.f239794a.chunk.js","sourcesContent":["export const PEER = {\n  CONFIG: {\n    iceServers: [{ urls: [\"stun:stun.l.google.com:19302\"] }],\n  },\n};\n","export const socket = new WebSocket(process.env.REACT_APP_SOCKET);\n","export const MESSAGE = {\n  TYPE: {\n    JOIN_LOBBY: \"JOIN_LOBBY\",\n    JOIN_LOBBY_ACK: \"JOIN_LOBBY_ACK\",\n\n    GET_PEER_LIST: \"GET_PEER_LIST\",\n    GET_PEER_LIST_ACK: \"GET_PEER_LIST_ACK\",\n    PEER_LIST_CHANGED: \"PEER_LIST_CHANGED\",\n\n    GET_STUN_TURN_INFO: \"GET_STUN_TURN_INFO\",\n    GET_STUN_TURN_INFO_ACK: \"GET_STUN_TURN_INFO_ACK\",\n\n    WEBRTC_OFFER: \"WEBRTC_OFFER\",\n    WEBRTC_ANSWER: \"WEBRTC_ANSWER\",\n    ICE_CANDIDATE: \"ICE_CANDIDATE\",\n\n    CALL_STARTED: \"CALL_STARTED\",\n\n    HANG_UP: \"HANG_UP\",\n  },\n};\n","import {\n  Grid,\n  Box,\n  Paper,\n  Typography,\n  Badge,\n  IconButton,\n} from \"@material-ui/core\";\n\nexport const Lobby = ({ users, myName, onSelectRecipient }) => (\n  <Grid container spacing={2}>\n    {users.map(({ name, status }) => {\n      if (myName === name) return null;\n\n      return (\n        <Grid item xs=\"auto\" key={name}>\n          <Badge\n            badgeContent={status === \"ONLINE\" ? \"online\" : \"offline\"}\n            color={status === \"ONLINE\" ? \"primary\" : \"secondary\"}\n          >\n            <IconButton\n              style={{ borderRadius: 8 }}\n              onClick={() => onSelectRecipient(name)}\n            >\n              <Paper component={Box} p={2}>\n                <Typography>{name}</Typography>\n              </Paper>\n            </IconButton>\n          </Badge>\n        </Grid>\n      );\n    })}\n  </Grid>\n);\n","import React from \"react\";\n\nimport { v4 as uuid } from \"uuid\";\n\nimport { Grid, Box, Button, TextField, IconButton } from \"@material-ui/core\";\nimport { Videocam, VideocamOff, Mic, MicOff } from \"@material-ui/icons\";\n\nimport { PEER } from \"./config/peer\";\nimport { socket } from \"./config/socket\";\nimport { MESSAGE } from \"./constants\";\n\nimport { Lobby } from \"./Lobby\";\n\nconst buttonProps = {\n  variant: \"contained\",\n  color: \"primary\",\n};\n\nconst PREFIX = \"test\";\n\nconst generateSenderName = () => `${PREFIX}@${uuid().slice(0, 4)}`;\n\nconst usePeer = () => {\n  const peerRef = React.useRef(null);\n  const localStreamRef = React.useRef(null);\n\n  const localVideoRef = React.useRef(null);\n  const remoteVideoRef = React.useRef(null);\n\n  const [isRemoteVideoVisible, setRemoteVideoVisable] = React.useState(false);\n\n  const [senderName, setSenderName] = React.useState(generateSenderName());\n  const [recipientName, setRecipientName] = React.useState(\"\");\n\n  const [joinedUsers, setJoinedUsers] = React.useState([]);\n\n  const [devicesMuteStatuses, setDeviceMuteStatus] = React.useState({\n    video: true,\n    audio: true,\n  });\n\n  const [disableButtons, setDisableButtonss] = React.useState({\n    join: false,\n    call: true,\n    hungUp: true,\n  });\n\n  const handleConnectToMediaStream = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: false,\n    });\n\n    if (!localVideoRef.current) return;\n\n    localVideoRef.current.srcObject = stream;\n    localStreamRef.current = stream;\n  };\n\n  const handleHungUp = () => {\n    setRemoteVideoVisable(false);\n\n    peerRef.current.ontrack = null;\n    peerRef.current.onicecandidate = null;\n    peerRef.current.close();\n\n    const message = {\n      type: MESSAGE.TYPE.HANG_UP,\n      data: \"\",\n      sender: senderName,\n      recipient: recipientName,\n    };\n\n    socket.send(JSON.stringify(message));\n    setDisableButtonss((state) => ({\n      ...state,\n      call: false,\n      hungUp: true,\n    }));\n  };\n\n  const handleCreatePeerConnection = () => {\n    setRemoteVideoVisable(true);\n    setDisableButtonss((state) => ({\n      ...state,\n      call: true,\n      hungUp: false,\n    }));\n\n    peerRef.current = new RTCPeerConnection(PEER.CONFIG);\n\n    localStreamRef.current\n      .getTracks()\n      .forEach((track) =>\n        peerRef.current.addTrack(track, localStreamRef.current)\n      );\n\n    peerRef.current.onicecandidate = ({ candidate }) => {\n      if (candidate) {\n        const message = {\n          type: MESSAGE.TYPE.ICE_CANDIDATE,\n          data: candidate,\n          sender: senderName,\n          recipient: recipientName,\n        };\n\n        socket.send(JSON.stringify(message));\n      }\n    };\n\n    peerRef.current.ontrack = (event) => {\n      if (!remoteVideoRef.current) return;\n\n      const [stream] = event.streams;\n\n      if (remoteVideoRef.current.srcObject === stream) return;\n\n      remoteVideoRef.current.srcObject = stream;\n    };\n  };\n\n  const handleCall = async () => {\n    handleCreatePeerConnection();\n\n    const sdpOffer = await peerRef.current.createOffer({\n      offerToReceiveVideo: true,\n      offerToReceiveAudio: true,\n    });\n\n    await peerRef.current.setLocalDescription(sdpOffer);\n\n    const message = {\n      type: MESSAGE.TYPE.WEBRTC_OFFER,\n      data: sdpOffer,\n      sender: senderName,\n      recipient: recipientName,\n    };\n\n    socket.send(JSON.stringify(message));\n  };\n\n  const handleJoinLobby = () => {\n    const message = {\n      type: MESSAGE.TYPE.JOIN_LOBBY,\n      data: \"\",\n      sender: senderName,\n      recipient: \"\",\n    };\n\n    socket.send(JSON.stringify(message));\n    setDisableButtonss((state) => ({\n      ...state,\n      join: true,\n      hungUp: true,\n    }));\n  };\n\n  const handleSelectRecipient = (newRecipientName) => {\n    setRecipientName(newRecipientName);\n    setDisableButtonss((state) => ({\n      ...state,\n      call: false,\n    }));\n  };\n\n  const handleToggleDevicesMuteStatus = (deviceType) => () =>\n    setDeviceMuteStatus((currentDevicesMuteStatuses) => {\n      const newDevicesMuteStatuses = {\n        ...currentDevicesMuteStatuses,\n        [deviceType]: !currentDevicesMuteStatuses[deviceType],\n      };\n\n      localStreamRef.current.getTracks().forEach((track) => {\n        if (track.kind === deviceType) {\n          track.enabled = !track.enabled;\n        }\n      });\n\n      return newDevicesMuteStatuses;\n    });\n\n  const handleChangeSenderName = (event) => setSenderName(event.target.value);\n\n  const handleConnectSocket = () => {\n    socket.addEventListener(\"message\", async (message) => {\n      const { type, data, sender, recipient } = JSON.parse(message.data);\n\n      if (type === MESSAGE.TYPE.PEER_LIST_CHANGED) {\n        const filteredUsers = data.users.filter((user) =>\n          user.name.includes(PREFIX)\n        );\n\n        setJoinedUsers(filteredUsers);\n      }\n\n      if (type === MESSAGE.TYPE.WEBRTC_OFFER && sender !== senderName) {\n        handleCreatePeerConnection();\n\n        setRecipientName(sender);\n\n        await peerRef.current.setRemoteDescription(data);\n\n        const sdpAnswer = await peerRef.current.createAnswer();\n\n        await peerRef.current.setLocalDescription(sdpAnswer);\n\n        const message = {\n          type: MESSAGE.TYPE.WEBRTC_ANSWER,\n          data: sdpAnswer,\n          sender: recipient,\n          recipient: sender,\n        };\n        socket.send(JSON.stringify(message));\n      }\n\n      if (type === MESSAGE.TYPE.WEBRTC_ANSWER && sender !== senderName) {\n        await peerRef.current.setRemoteDescription(data);\n      }\n\n      if (type === MESSAGE.TYPE.ICE_CANDIDATE && sender !== senderName) {\n        peerRef.current.addIceCandidate(data);\n      }\n\n      if (type === MESSAGE.TYPE.HANG_UP && sender !== senderName) {\n        handleHungUp();\n      }\n    });\n  };\n\n  React.useEffect(() => {\n    handleConnectToMediaStream();\n    handleConnectSocket();\n  }, []);\n\n  return {\n    senderName,\n    handleChangeSenderName,\n\n    recipientName,\n    handleSelectRecipient,\n\n    localVideoRef,\n    remoteVideoRef,\n    isRemoteVideoVisible,\n\n    disableButtons,\n\n    isVideoOn: devicesMuteStatuses.video,\n    isAudioOn: devicesMuteStatuses.audio,\n    handleToggleDevicesMuteStatus,\n\n    joinedUsers,\n    handleCall,\n    handleHungUp,\n    handleJoinLobby,\n  };\n};\n\nexport const App = () => {\n  const peer = usePeer();\n\n  return (\n    <Box p={2}>\n      <Grid container spacing={2} justify=\"center\">\n        <Grid item xs={6}>\n          <video\n            autoPlay\n            ref={peer.localVideoRef}\n            style={{ width: \"100%\", height: \"100%\" }}\n          />\n        </Grid>\n        {peer.isRemoteVideoVisible && (\n          <Grid item xs={6}>\n            <video\n              autoPlay\n              ref={peer.remoteVideoRef}\n              style={{ width: \"100%\", height: \"100%\" }}\n            />\n          </Grid>\n        )}\n        <Grid item xs={12} container spacing={2} justify=\"center\">\n          <Grid item xs=\"auto\">\n            <IconButton onClick={peer.handleToggleDevicesMuteStatus(\"video\")}>\n              {peer.isVideoOn ? (\n                <Videocam color=\"primary\" />\n              ) : (\n                <VideocamOff color=\"error\" />\n              )}\n            </IconButton>\n          </Grid>\n          <Grid item xs=\"auto\">\n            <IconButton onClick={peer.handleToggleDevicesMuteStatus(\"audio\")}>\n              {peer.isAudioOn ? (\n                <Mic color=\"primary\" />\n              ) : (\n                <MicOff color=\"error\" />\n              )}\n            </IconButton>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            value={peer.senderName}\n            onChange={peer.handleChangeSenderName}\n            variant=\"outlined\"\n            fullWidth\n            autoFocus\n            disabled={peer.disableButtons.join}\n          />\n        </Grid>\n        <Grid item xs=\"auto\">\n          <Button\n            {...buttonProps}\n            onClick={peer.handleCall}\n            disabled={peer.disableButtons.call}\n          >\n            Call {peer.recipientName && `to ${peer.recipientName}`}\n          </Button>\n        </Grid>\n        <Grid item xs=\"auto\">\n          <Button\n            {...buttonProps}\n            onClick={peer.handleJoinLobby}\n            disabled={peer.disableButtons.join}\n          >\n            {peer.disableButtons.join ? \"Joined\" : \"Join\"}\n          </Button>\n        </Grid>\n        <Grid item xs=\"auto\">\n          <Button\n            {...buttonProps}\n            onClick={peer.handleHungUp}\n            disabled={peer.disableButtons.hungUp}\n          >\n            Hung up\n          </Button>\n        </Grid>\n      </Grid>\n      <Lobby\n        users={peer.joinedUsers}\n        myName={peer.senderName}\n        onSelectRecipient={peer.handleSelectRecipient}\n      />\n    </Box>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"webrtc-adapter\";\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}